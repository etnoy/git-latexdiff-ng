#! /bin/bash

# Git-latexdiff-ng: An attempt to simplify git-latexdiff
# This is nothing more than a quick hack, be warned ;)

#To install, place in /usr/lib/git-core/ and make executable

#Authors: Jan-Åke Larsson and Jonathan Jogenfors, both at Linköping University, Dept. of Electrical Engineering, Information Coding Group

revision=
src=
subdir=`git rev-parse --show-prefix`
while test $# -ne 0; do
    case "$1" in
        "-r")
            shift
            revision=$1
            ;;
        *)
            src=${1%.tex}
            ;;
    esac
    shift
done

# Did the user specify a source file?
if [ -z "$src" ]; then

    # Heuristic: If the tex files follow the latexmain standard, things are much easier
    MAINFILES=$(ls *.tex.latexmain)
    if [ -z "$MAINFILES" ]; then
        # Yes, we have a latexmain file, so use that.
        echo "No latexmain found"
        exit 1
    fi
    src=${MAINFILES%.tex.latexmain}
fi

#Did the user specify a revision?
if [ -z "$revision" ]; then
    # No, so try to guess what the user wants
		if git diff --quiet $src.tex; then
            # Take the previous version of the file in question
				revision="HEAD^"
		else
				revision="HEAD"
		fi
fi

OLDFILE=$src.old.tex
DIFFILE=$src.diff.tex

echo $OLDFILE
echo $DIFFILE

git show $revision:$subdir$src.tex > $OLDFILE
if [ $? -ne 0 ]; then
    echo "Could not get previous revision"
    exit 1
fi
latexdiff $OLDFILE $src.tex > $DIFFILE
if [ $? -ne 0 ]; then
    echo "Could not take latexdiff"
    exit 1
fi
latexmk -f -pdf $DIFFILE
if [ $? -ne 0 ]; then
    echo "Could not compile document"
    exit 1
fi
latexmk -c -f -pdf $DIFFILE
if [ $? -ne 0 ]; then
    echo "Could not compile document"
    exit 1
fi
